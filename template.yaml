AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Cloud Resume

Globals:
  Function:
    Timeout: 3

Parameters:
  ApiDomainNameParameter:
    Type: String
    Description: The subdomain of the API
    AllowedValues:
      - testapi
      - api
  DomainNameParameter:
    Type: String
    Description: The domain name of the site
    Default: scottsanford.io
  Environment:
    Type: String
    Description: stage / alias name to be used in deployment
    AllowedValues:
      - test
      - prod
  HostedZoneParameter:
    Type: String
    Description: The hosted zone for the Route53 records
    Default: Z0700654CIOR7MZZYAUR
  WebsiteDomainNameParameter:
    Type: String
    Description: The subdomain of the API
    AllowedValues:
      - testresume
      - resume

Resources:
  MyResumeWebsite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: !Sub ${Environment}-cloud-resume
      Tags:
        - Key: description
          Value: "Private S3 Bucket with static files"

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginIdentity}"
            Action: "s3:GetObject"
            Resource: !Sub arn:aws:s3:::${Environment}-cloud-resume/*
      Bucket: !Ref MyResumeWebsite

  ResumeCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Join ["", [!Ref WebsiteDomainNameParameter, ".", !Ref DomainNameParameter]]
        Origins:
          - DomainName: !Sub ${Environment}-cloud-resume.s3.amazonaws.com
            Id: S3-private-resume-bucket
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginIdentity}"
        Enabled: "true"
        Comment: CloudFront distribution for my resume site
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          TargetOriginId: S3-private-resume-bucket
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        ViewerCertificate:
          AcmCertificateArn: !Ref MyCertificate
          SslSupportMethod: sni-only

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "origin identity"

  MyRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId:
        Ref: HostedZoneParameter
      RecordSets:
        - Name: !Join ["", [!Ref WebsiteDomainNameParameter, ".", !Ref DomainNameParameter]]
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt ResumeCloudFrontDistribution.DomainName

  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Join ["", ["*.", !Ref DomainNameParameter]]
      SubjectAlternativeNames:
        - !Ref DomainNameParameter
        - !Join ["", ["*.", !Ref DomainNameParameter]]
      DomainValidationOptions:
        - DomainName: !Ref DomainNameParameter
          HostedZoneId:
            Ref: HostedZoneParameter
      ValidationMethod: DNS

  CloudResumeApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${Environment}-cloud-resume-agw
      StageName: !Ref Environment
      OpenApiVersion: 3.0.1 # Fixes the stage Stage that SAM creates.
      Domain:
        DomainName:
          !Join ["", [!Ref ApiDomainNameParameter, ".", !Ref DomainNameParameter]]
        CertificateArn: !Ref MyCertificate
        Route53:
          HostedZoneId:
            Ref: HostedZoneParameter

  CountLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}_count_lambda
      CodeUri: count/
      Handler: index.count
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Sub ${Environment}-cloud-resume-table
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /count
            Method: GET
            RestApiId:
              Ref: CloudResumeApiGateway
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Sub ${Environment}-cloud-resume-table

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-cloud-resume-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"
